react特点:虚拟DOM(数据驱动UI)

开发框架思路:
1. 数据(state)
2. 模板(jsx)
3. 数据 + 模板 => 生成原始的真实dom节点
4. 数据改变(state change)
5. 新数据 + 模板 => 生成新的真实的dom节点
6. 用新的真实的dom节点替换原始的真实dom节点

react:
1. 数据(state)
2. 模板(jsx)
3. 数据 + 模板 => 生成原始的dom节点
4. 原始的真实dom节点 => 虚拟的dom节点(一个用来描述真实dom的js对象)
5. 数据改变(state change)
6. 新的数据 => 新的虚拟dom
7. 对比找出原始虚拟dom与新的虚拟dom之间区别(diff算法)
8. 只更新原始与新的dom之间有区别的部分